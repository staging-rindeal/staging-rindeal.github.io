name: Site Deployment and Testing

on:
  repository_dispatch:
    types: [site-built]

jobs:
  process-artifact:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:

    - name: Setup
      id: setup
      run: |
        echo "site_data_dir=${GITHUB_WORKSPACE}/site-data" >> $GITHUB_OUTPUT
        
#        sudo apt-get install -y libarchive-tools
    
    - name: Download artifact
      if: github.event_name == 'repository_dispatch'
      uses: actions/download-artifact@v4
      with:
        path:         ${{ steps.setup.outputs.site_data_dir }}
        repository:   ${{ github.event.client_payload.artifact.repo   }}
        run-id:       ${{ github.event.client_payload.artifact.run_id }}
        name:         ${{ github.event.client_payload.artifact.name   }}
        github-token: ${{ env.CODE_ARTIFACT_TOKEN }}

#    - name: Download artifact
#      id: code-artifact
#      if: github.event_name == 'repository_dispatch'
#      env:
#        CLIENT_PAYLOAD: ${{ toJSON(github.event.client_payload) }}
#        CODE_ARTIFACT_ID: ${{ github.event.client_payload.artifact.id }}
#        CODE_ARTIFACT_REPO: ${{ github.event.client_payload.artifact.repo }}
#        CODE_ARTIFACT_TOKEN: ${{ secrets.CODE_ARTIFACT_TOKEN }}
#        SITE_DATA_DIR: ${{ steps.setup.outputs.site_data_dir }}
#      run: |
#        set -xeuo pipefail
#
#        mkdir -vp "${SITE_DATA_DIR}"
#        curl --fail -L \
#          -H "Accept: application/vnd.github+json" \
#          -H "X-GitHub-Api-Version: 2022-11-28" \
#          -H "Authorization: Bearer ${CODE_ARTIFACT_TOKEN}" \
#          "https://api.github.com/repos/${CODE_ARTIFACT_REPO}/actions/artifacts/${CODE_ARTIFACT_ID}/zip" \
#          -o - | bsdtar -xf- -C "${SITE_DATA_DIR}"

    - name: Upload artifact
      id: artifact
      uses: actions/upload-artifact@v4
      with:
        name: site-data
        path: ${{ steps.setup.outputs.site_data_dir }}

    - name: Trigger tests
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.TESTER_DISPATCH_TOKEN }}
        repository: ${{ vars.TESTER_REPO }}
        event-type: test-site
        client-payload: |-
          {
            "environment": ${{ toJSON(github.event.client_payload.environment) }},
            "artifact": {
              "id":     ${{ toJSON(steps.artifact.outputs.artifact-id) }},
              "url":    ${{ toJSON(steps.artifact.outputs.artifact-url) }},
              "repo":   ${{ toJSON(github.repository) }},
              "run_id": ${{ toJSON(github.run_id) }}
            }
          }          
